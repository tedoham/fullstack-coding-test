// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tedoham/fullstack-coding-test/service (interfaces: ProductService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/tedoham/fullstack-coding-test/dto"
	errs "github.com/tedoham/fullstack-coding-test/errs"
)

// MockProductService is a mock of ProductService interface.
type MockProductService struct {
	ctrl     *gomock.Controller
	recorder *MockProductServiceMockRecorder
}

// MockProductServiceMockRecorder is the mock recorder for MockProductService.
type MockProductServiceMockRecorder struct {
	mock *MockProductService
}

// NewMockProductService creates a new mock instance.
func NewMockProductService(ctrl *gomock.Controller) *MockProductService {
	mock := &MockProductService{ctrl: ctrl}
	mock.recorder = &MockProductServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductService) EXPECT() *MockProductServiceMockRecorder {
	return m.recorder
}

// GetProduct mocks base method.
func (m *MockProductService) GetProduct(arg0 int) (*dto.ProductResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProduct", arg0)
	ret0, _ := ret[0].(*dto.ProductResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetProduct indicates an expected call of GetProduct.
func (mr *MockProductServiceMockRecorder) GetProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProduct", reflect.TypeOf((*MockProductService)(nil).GetProduct), arg0)
}

// GetProducts mocks base method.
func (m *MockProductService) GetProducts(arg0, arg1 int) ([]dto.ProductResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProducts", arg0, arg1)
	ret0, _ := ret[0].([]dto.ProductResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetProducts indicates an expected call of GetProducts.
func (mr *MockProductServiceMockRecorder) GetProducts(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProducts", reflect.TypeOf((*MockProductService)(nil).GetProducts), arg0, arg1)
}

// UpdateDeliveryStatus mocks base method.
func (m *MockProductService) UpdateDeliveryStatus(arg0, arg1 int) *errs.AppError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateDeliveryStatus", arg0, arg1)
	ret0, _ := ret[0].(*errs.AppError)
	return ret0
}

// UpdateDeliveryStatus indicates an expected call of UpdateDeliveryStatus.
func (mr *MockProductServiceMockRecorder) UpdateDeliveryStatus(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateDeliveryStatus", reflect.TypeOf((*MockProductService)(nil).UpdateDeliveryStatus), arg0, arg1)
}
